dependencies {
    implementation group: 'com.google.code.gson', name: 'gson', version: gson_version
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: kotlin_version
    implementation project(':tools:PipeableParser')

    implementation group: 'info.picocli', name: 'picocli', version: picocli_version
    implementation group: 'org.slf4j', name: 'slf4j-simple', version: slf4j_version
    implementation group: 'org.apache.commons', name: 'commons-text', version: '1.10.0'

    testImplementation group: 'org.jetbrains.kotlin', name: 'kotlin-test', version: kotlin_version
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: junit5_version
    testImplementation group: 'org.assertj', name: 'assertj-core', version: assertj_version
    testImplementation group: 'io.mockk', name: 'mockk', version: mockk_version
    testImplementation group: 'org.skyscreamer', name: 'jsonassert', version: jsonassert_version
    testImplementation group: 'org.apache.commons', name: 'commons-text', version: '1.10.0'
    testImplementation project(':tools:PipeableParser')

    testRuntimeOnly group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: kotlin_version
}

task jarTest(type: Jar, dependsOn: testClasses) {
    from sourceSets.test.output
    classifier = 'test'
}

configurations {
    testOutput
}

artifacts {
    testOutput jarTest
}

jacocoTestReport {
    afterEvaluate {
       getClassDirectories().from(files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: ['**/model/**'])
        }))
    }
}

test {
    useJUnitPlatform()
}
