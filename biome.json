{
  "$schema": "https://biomejs.dev/schemas/1.9.4/schema.json",
  "vcs": { "enabled": true, "clientKind": "git", "useIgnoreFile": true },
  "files": {
    "ignoreUnknown": false,
    "ignore": [
      "**/.idea",
      "**/node_modules",
      "**/install.js",
      "**/build",
      "**/plop-templates",
      "**/dist",
      "**/assets",
      "**/public",
      "**/__snapshots__",
      "**/*.properties",
      "**/Dockerfile",
      "**/*.glsl",
      "**/.*",
      "**/*.sh",
      "**/*.hbs",
      "**/*.kt",
      "**/*.txt",
      "**/*.gradle",
      "**/*.jar",
      "**/*.jpg",
      "**/*.png",
      "**/*.bat",
      "**/*.xml",
      "**/*.svg",
      "**/*.py",
      "**/gradlew",
      "**/test",
      "**/Gemfile",
      "**/Gemfile.lock",
      "**/Pipfile",
      "**/Pipfile.lock",
      "**/_site",
      "**/out",
      "**/resources/**",
      "**/assets/**",
      "**/binScripts/**",
      "gh-pages/vendor",
      "gh-pages/visualization",
      "**/*.gradle.kts",
      "**/*.toml"
    ]
  },
  "formatter": {
    "enabled": true,
    "useEditorconfig": true,
    "formatWithErrors": true,
    "indentStyle": "space",
    "indentWidth": 4,
    "lineEnding": "lf",
    "lineWidth": 140,
    "attributePosition": "auto",
    "bracketSpacing": true
  },
  "organizeImports": { "enabled": false },
  "linter": {
    "enabled": true,
    "rules": {
      "recommended": false,
      "complexity": {
        "noBannedTypes": "error",
        "noExtraBooleanCast": "error",
        "noForEach": "error",
        "noMultipleSpacesInRegularExpressionLiterals": "error",
        "noStaticOnlyClass": "off",
        "noUselessCatch": "error",
        "noUselessSwitchCase": "error",
        "noUselessThisAlias": "error",
        "noUselessTypeConstraint": "error",
        "noWith": "error",
        "useDateNow": "error",
        "useFlatMap": "error",
        "useOptionalChain": "error",
        "useRegexLiterals": "error"
      },
      "correctness": {
        "noConstAssign": "error",
        "noConstantCondition": "error",
        "noEmptyCharacterClassInRegex": "error",
        "noEmptyPattern": "error",
        "noGlobalObjectCalls": "error",
        "noInnerDeclarations": "error",
        "noInvalidBuiltinInstantiation": "error",
        "noInvalidConstructorSuper": "error",
        "noInvalidUseBeforeDeclaration": "off",
        "noNewSymbol": "error",
        "noNonoctalDecimalEscape": "error",
        "noPrecisionLoss": "error",
        "noSelfAssign": "error",
        "noSetterReturn": "error",
        "noSwitchDeclarations": "error",
        "noUndeclaredVariables": "error",
        "noUnreachable": "error",
        "noUnreachableSuper": "error",
        "noUnsafeFinally": "error",
        "noUnsafeOptionalChaining": "error",
        "noUnusedImports": "error",
        "noUnusedLabels": "error",
        "noUnusedVariables": "warn",
        "useArrayLiterals": "off",
        "useIsNan": "error",
        "useValidForDirection": "error",
        "useYield": "error"
      },
      "style": {
        "noInferrableTypes": "error",
        "noNamespace": "error",
        "noNegationElse": "off",
        "noNonNullAssertion": "warn",
        "noUselessElse": "error",
        "useAsConstAssertion": "error",
        "useBlockStatements": "error",
        "useCollapsedElseIf": "error",
        "useExplicitLengthCheck": "error",
        "useFilenamingConvention": { "level": "off", "options": { "requireAscii": true, "filenameCases": ["kebab-case"] } },
        "useForOf": "error",
        "useNamingConvention": {
          "level": "off",
          "options": {
            "strictCase": false,
            "conventions": [
              {
                "selector": { "kind": "enumMember" },
                "formats": ["camelCase", "PascalCase", "CONSTANT_CASE"]
              },
              {
                "selector": { "kind": "variable" },
                "match": "_?([^_]*)",
                "formats": ["camelCase", "PascalCase", "CONSTANT_CASE"]
              },
              {
                "selector": { "kind": "function" },
                "match": "_?([^_]*)",
                "formats": ["camelCase", "PascalCase", "CONSTANT_CASE"]
              }
            ]
          }
        },
        "useNodejsImportProtocol": "off",
        "useNumberNamespace": "error",
        "useTemplate": "error",
        "useThrowNewError": "error"
      },
      "suspicious": {
        "noAssignInExpressions": "off",
        "noAsyncPromiseExecutor": "error",
        "noCatchAssign": "error",
        "noClassAssign": "error",
        "noCompareNegZero": "error",
        "noConsole": { "level": "error", "options": { "allow": ["warn", "error"] } },
        "noControlCharactersInRegex": "error",
        "noDebugger": "error",
        "noDoubleEquals": "error",
        "noDuplicateCase": "error",
        "noDuplicateClassMembers": "error",
        "noDuplicateObjectKeys": "error",
        "noDuplicateParameters": "error",
        "noEmptyBlockStatements": "off",
        "noEmptyInterface": "off",
        "noExplicitAny": "off",
        "noExtraNonNullAssertion": "error",
        "noFallthroughSwitchClause": "error",
        "noFunctionAssign": "error",
        "noGlobalAssign": "error",
        "noImportAssign": "error",
        "noMisleadingCharacterClass": "error",
        "noMisleadingInstantiator": "error",
        "noPrototypeBuiltins": "error",
        "noRedeclare": "error",
        "noShadowRestrictedNames": "error",
        "noSparseArray": "error",
        "noThenProperty": "error",
        "noUnsafeNegation": "error",
        "useErrorMessage": "error",
        "useGetterReturn": "error",
        "useIsArray": "error",
        "useNamespaceKeyword": "error",
        "useNumberToFixedDigitsArgument": "error",
        "useValidTypeof": "error"
      }
    },
    "ignore": ["**/node_modules", "**/dist", "**/*.js"]
  },
  "javascript": {
    "formatter": {
      "jsxQuoteStyle": "double",
      "quoteProperties": "asNeeded",
      "trailingCommas": "none",
      "semicolons": "asNeeded",
      "arrowParentheses": "asNeeded",
      "bracketSameLine": false,
      "quoteStyle": "double",
      "attributePosition": "auto",
      "bracketSpacing": true
    },
    "parser": { "unsafeParameterDecoratorsEnabled": true },
    "globals": ["browser", "page", "context", "jestPuppeteer"]
  },
  "overrides": [
    {
      "include": ["*.ts", "*.tsx", "*.mts", "*.cts"],
      "linter": {
        "rules": {
          "correctness": {
            "noConstAssign": "off",
            "noGlobalObjectCalls": "off",
            "noInvalidConstructorSuper": "off",
            "noNewSymbol": "off",
            "noSetterReturn": "off",
            "noUndeclaredVariables": "off",
            "noUnreachable": "off",
            "noUnreachableSuper": "off"
          },
          "style": { "noArguments": "error", "noVar": "error", "useConst": "error" },
          "suspicious": {
            "noDuplicateClassMembers": "off",
            "noDuplicateObjectKeys": "off",
            "noDuplicateParameters": "off",
            "noFunctionAssign": "off",
            "noImportAssign": "off",
            "noRedeclare": "off",
            "noUnsafeNegation": "off",
            "useGetterReturn": "off",
            "useValidTypeof": "off"
          }
        }
      }
    },
    {
      "include": ["*.ts", "*.tsx", "*.mts", "*.cts"],
      "linter": {
        "rules": {
          "correctness": {
            "noConstAssign": "off",
            "noGlobalObjectCalls": "off",
            "noInvalidConstructorSuper": "off",
            "noNewSymbol": "off",
            "noSetterReturn": "off",
            "noUndeclaredVariables": "off",
            "noUnreachable": "off",
            "noUnreachableSuper": "off"
          },
          "style": { "noArguments": "error", "noVar": "error", "useConst": "error" },
          "suspicious": {
            "noDuplicateClassMembers": "off",
            "noDuplicateObjectKeys": "off",
            "noDuplicateParameters": "off",
            "noFunctionAssign": "off",
            "noImportAssign": "off",
            "noRedeclare": "off",
            "noUnsafeNegation": "off",
            "useGetterReturn": "off",
            "useValidTypeof": "off"
          }
        }
      }
    }
  ]
}
