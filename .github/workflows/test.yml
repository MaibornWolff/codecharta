name: Tests

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:
 check_prettier:
    if: "!contains(github.event.head_commit.message, 'Deploying to main')"
    name: Prettier Test
    runs-on: ubuntu-latest
    env:
      working-directory: ./
    steps:
    - uses: actions/checkout@v3
    - name: Setup Node.js environment
      uses: actions/setup-node@v2
      with:
        node-version: '16'

    - name: Cache root node modules
      uses: actions/cache@v3
      env:
        cache-name: cache-root-node-modules
      with:
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Install Node
      run: npm ci
      working-directory: ${{env.working-directory}}

    - name: Lint files
      run: |
        npm run format:check
      working-directory: ${{env.working-directory}}

 build_visualization_test:
    if: "!contains(github.event.head_commit.message, 'Deploying to main')"
    name: Visualization Test
    runs-on: ubuntu-latest
    env:
      working-directory: ./visualization
    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js environment
      uses: actions/setup-node@v2
      with:
        node-version: '16'

    - name: Cache node modules
      uses: actions/cache@v3
      env:
        cache-name: cache-node-modules
      with:
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Install Node
      run: npm ci
      working-directory: ${{env.working-directory}}

    - name: Test and Linter
      run: |
        npm run test --ci
        npm run lint
      working-directory: ${{env.working-directory}}

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
          name: coverage
          path: ./visualization/dist/

 build_visualization_e2e:
    if: "!contains(github.event.head_commit.message, 'Deploying to main')"
    name: Visualization E2E
    runs-on: ubuntu-latest
    env:
      working-directory: ./visualization
    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js environment
      uses: actions/setup-node@v2
      with:
        node-version: '16'

    - name: Cache node modules
      uses: actions/cache@v3
      env:
        cache-name: cache-node-modules
      with:
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Install Node
      run: npm ci
      working-directory: ${{env.working-directory}}

    - name: Test and Linter
      run: |
        npm run build
        npm run e2e:ci
      working-directory: ${{env.working-directory}}


 test_and_sonar_analysis:
    if: github.actor != 'dependabot[bot]' && github.actor != 'dependabot-preview[bot]'
    name: "Build, Test and Publish Analysis Sonar Results"
    runs-on: ubuntu-latest
    env:
      working-directory: ./analysis

    steps:
      - uses: actions/checkout@v3

      - name: Setup Java JDK
        uses: actions/setup-java@v3.3.0
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Build
        run: chmod +x ./gradlew
        working-directory: ${{env.working-directory}}

      - name: Test Analysis
        run: |
          ./gradlew build integrationTest
          ./gradlew jacocoTestReport
        working-directory: ${{env.working-directory}}

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v1.6
        with:
          projectBaseDir: ./analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          JAVA_HOME: ''


 publish_sonar_visualization:
    needs: [build_visualization_test, build_visualization_e2e]
    if: github.actor != 'dependabot[bot]' && github.actor != 'dependabot-preview[bot]'
    name: "Build and Publish Visualization Sonar Results"
    runs-on: ubuntu-latest
    env:
      working-directory: ./visualization

    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v2
        with:
          name: coverage
          path: ./visualization/dist/

      - name: SonarCloud Scan
        if: github.actor != 'dependabot[bot]' && github.actor != 'dependabot-preview[bot]'
        uses: SonarSource/sonarcloud-github-action@v1.6
        with:
          projectBaseDir: ./visualization
          args: >
            -Dsonar.javascript.lcov.reportPaths=./dist/coverage/lcov.info
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

