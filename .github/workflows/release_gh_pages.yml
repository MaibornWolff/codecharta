name: Build

on:
  push:
    tags: '*.*.*'

jobs:
  build_project:
    name: Build Project

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Java JDK
        uses: actions/setup-java@v3.2.0
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Setup Node.js environment
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Build analysis
        working-directory: ./analysis
        run: |
              chmod +x ./gradlew
              ./gradlew build

      - name: Build visualization
        working-directory: ./visualization
        run: |
          rm -rf node_modules/nwjs-builder-phoenix/caches/*
          npm ci
          npm run test
          npm run build:web
          npm run package
          docker build -t codecharta/codecharta-visualization .

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Run building script build gh pages
        run: sh ./script/build_gh_pages.sh

      - name: Upload Release Files to tagged release
        uses: alexellis/upload-assets@0.3.0
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          asset_paths: '["visualization/dist/packages/*.zip", "analysis/build/distributions/*.tar"]'

      - name: Publish visualization npm package
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      - run: npm ci
        working-directory: ./visualization

      - uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_TOKEN }}
          package: ./visualization/package.json
          working-directory: ./visualization

      - name: Publish analysis npm package
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      - run: npm ci
        working-directory: ./visualization
      - uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_TOKEN }}
          package: ./analysis/node-wrapper/package.json
          working-directory: ./visualization

      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Run Docker Image
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          default_branch: main
          name: codecharta/codecharta-visualization
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          tags: ${{env.RELEASE_VERSION}}
          workdir: ./visualization

      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@v4.3.3
        with:
          token: ${{ secrets.DEPLOY_TOKEN }}
          branch: gh-pages
          folder: gh-pages
          clean: true
