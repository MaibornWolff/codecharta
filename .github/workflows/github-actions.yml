name: Test and Publish Sonar Results

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:
 build_visualization_test:
    name: Visualization Test
    runs-on: ubuntu-latest
    env:
      working-directory: ./visualization
    steps:
    - uses: actions/checkout@v2

    - name: Setup Node.js environment
      uses: actions/setup-node@v2.1.4
      with:
        node-version: '12'  

    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Install Node
      run: npm install
      working-directory: ${{env.working-directory}} 

    - name: Recache-Node     
      if: failure()
      run: |
        npm cache clean --force
        npm cache verify
      working-directory: ${{env.working-directory}}

    - name: Test and Linter
      run: |
        npm run test --ci
        npm run lint      
      working-directory: ${{env.working-directory}}

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
          name: coverage
          path: ./visualization/dist/

 build_visualization_e2e:
    name: Visualization E2E
    runs-on: ubuntu-latest
    env:
      working-directory: ./visualization
    steps:
    - uses: actions/checkout@v2

    - name: Setup Node.js environment
      uses: actions/setup-node@v2.1.4
      with:
        node-version: '12'  

    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Install Node
      run: npm install
      working-directory: ${{env.working-directory}} 

    - name: Recache-Node     
      if: failure()
      run: |
        npm cache clean --force
        npm cache verify
      working-directory: ${{env.working-directory}}  

    - name: Test and Linter
      run: |
        npm run build:web
        npm run e2e:ci
      working-directory: ${{env.working-directory}}  
      
 publish_sonar_analysis:
    name: "Build and Publish Analysis Sonar Results"
    runs-on: ubuntu-latest
    env:
      working-directory: ./analysis
    
    steps:
      - uses: actions/checkout@v2
      
      - name: Setup Java JDK
        uses: actions/setup-java@v1.4.3
        with: 
          java-version: '11' 
      
      - name: Build
        run: chmod +x ./gradlew
        working-directory: ${{env.working-directory}}

      - name: Test Analysis
        run: |
          ./gradlew build integrationTest
          ./gradlew jacocoTestReport
        working-directory: ${{env.working-directory}}

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v1.5
        with:
          projectBaseDir: ./analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          JAVA_HOME: '' 

 publish_sonar_visualization:  
    needs: [build_visualization_test, build_visualization_e2e]
    name: "Build and Publish Visualization Sonar Results"
    runs-on: ubuntu-latest
    env:
      working-directory: ./visualization
    
    steps:
      - uses: actions/checkout@v2
         
      - uses: actions/download-artifact@v2
        with:
          name: coverage
          path: ./visualization/dist/
      
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v1.5
        with:
          projectBaseDir: ./visualization
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
