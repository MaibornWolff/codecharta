name: Tests

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'analysis/**'
      - 'gh-pages/**'
      - '**/*.md'
  pull_request:
    branches:
      - main
    paths-ignore:
      - 'analysis/**'
      - 'gh-pages/**'
      - '**/*.md'

jobs:
 build_visualization_test:
    name: Unit Tests (Visualization)
    runs-on: ubuntu-latest
    env:
      working-directory: ./visualization
    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js environment
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Cache node modules
      uses: actions/cache@v4
      env:
        cache-name: cache-node-modules
      with:
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Install node
      run: npm ci
      working-directory: ${{env.working-directory}}

    - name: Run unit tests
      env:
        NODE_OPTIONS: "--max_old_space_size=4096"
      run: |
        npm run test:ci
      working-directory: ${{env.working-directory}}

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
          name: coverage
          path: ./visualization/dist/

 build_visualization_e2e:
    name: E2E Tests (Visualization)
    runs-on: ubuntu-latest
    env:
      working-directory: ./visualization
    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js environment
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Cache node modules
      uses: actions/cache@v4
      env:
        cache-name: cache-node-modules
      with:
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Install node
      run: npm ci
      working-directory: ${{env.working-directory}}

    - name: Build and run e2e tests
      env:
        PUPPETEER_EXECUTABLE_PATH: "/usr/bin/google-chrome"
      run: |
        npm run build
        npm run e2e:ci
      working-directory: ${{env.working-directory}}

 publish_sonar_visualization:
    needs: [build_visualization_test, build_visualization_e2e]
    name: "Code Quality Results (visualization)"
    runs-on: ubuntu-latest
    env:
      working-directory: ./visualization

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/download-artifact@v4
        with:
          name: coverage
          path: ./visualization/dist/

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2.3.0
        with:
          projectBaseDir: ./visualization
          args: >
            -Dsonar.javascript.lcov.reportPaths=./dist/coverage/lcov.info
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

