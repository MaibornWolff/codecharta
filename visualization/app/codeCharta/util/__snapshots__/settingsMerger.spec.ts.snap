// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SettingsMerger AttributeTypes merge should merge attributeTypes if one file does not contain attributeTypes 1`] = `
Object {
  "edges": Object {
    "attribute2": 1,
  },
  "nodes": Object {
    "attribute1": 0,
  },
}
`;

exports[`SettingsMerger AttributeTypes merge should merge different attributeTypes 1`] = `
Object {
  "edges": Object {
    "attribute2": 1,
    "attribute4": 1,
  },
  "nodes": Object {
    "attribute1": 0,
    "attribute3": 0,
  },
}
`;

exports[`SettingsMerger AttributeTypes merge should overwrite attributeType if the same exists 1`] = `
Object {
  "edges": Object {
    "attribute2": 1,
  },
  "nodes": Object {
    "attribute1": 1,
  },
}
`;

exports[`SettingsMerger Blacklist merge should merge blacklist for different paths 1`] = `
Array [
  Object {
    "path": "/root/nodeA",
    "type": "exclude",
  },
  Object {
    "path": "/another/nodeB",
    "type": "hide",
  },
  Object {
    "path": "/another/nodeC",
    "type": "exclude",
  },
  Object {
    "path": "*prefix/nodeD",
    "type": "hide",
  },
]
`;

exports[`SettingsMerger Blacklist merge should only contain unique paths+type 1`] = `
Array [
  Object {
    "path": "/root/nodeA",
    "type": "exclude",
  },
  Object {
    "path": "/another/nodeB",
    "type": "hide",
  },
  Object {
    "path": "*prefix/nodeD",
    "type": "hide",
  },
]
`;

exports[`SettingsMerger Edges merge should merge all edges if one file does not contain edges 1`] = `
Array [
  Object {
    "attributes": Object {
      "attribute1": 10,
      "attribute2": 20,
    },
    "fromNodeName": "/root/nodeA",
    "toNodeName": "/root/nodeB",
    "visible": undefined,
  },
  Object {
    "attributes": Object {
      "attribute1": 10,
      "attribute2": 20,
    },
    "fromNodeName": "/root/nodeA",
    "toNodeName": "/root/nodeC",
    "visible": undefined,
  },
]
`;

exports[`SettingsMerger Edges merge should merge different edges 1`] = `
Array [
  Object {
    "attributes": Object {
      "attribute1": 10,
      "attribute2": 20,
    },
    "fromNodeName": "/root/nodeA",
    "toNodeName": "/root/nodeB",
    "visible": undefined,
  },
  Object {
    "attributes": Object {
      "attribute1": 10,
      "attribute2": 20,
    },
    "fromNodeName": "/root/nodeA",
    "toNodeName": "/root/nodeC",
    "visible": undefined,
  },
]
`;

exports[`SettingsMerger Edges merge should merge edge-attributes for the same edge paths 1`] = `
Array [
  Object {
    "attributes": Object {
      "attribute1": 10,
      "attribute2": 20,
      "attribute3": 30,
      "attribute4": 40,
    },
    "fromNodeName": "/root/nodeA",
    "toNodeName": "/root/nodeB",
    "visible": undefined,
  },
]
`;

exports[`SettingsMerger Edges merge should overwrite duplicated edge-attributes for the same edge 1`] = `
Array [
  Object {
    "attributes": Object {
      "attribute1": 70,
      "attribute2": 80,
    },
    "fromNodeName": "/root/nodeA",
    "toNodeName": "/root/nodeB",
    "visible": undefined,
  },
]
`;
